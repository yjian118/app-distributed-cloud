#
# SPDX-License-Identifier: Apache-2.0
#

# Default values for dcmanager.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

images:
  tags:
    dcorch: docker.io/starlingx/stx-distributed-cloud:master-debian-stable-latest
    ks_user: docker.io/starlingx/stx-distributed-cloud:master-debian-stable-latest
    ks_service: docker.io/starlingx/stx-distributed-cloud:master-debian-stable-latest
    ks_endpoints: docker.io/starlingx/stx-distributed-cloud:master-debian-stable-latest
    dcorch_db_sync: docker.io/starlingx/stx-distributed-cloud:master-debian-stable-latest
    db_init: docker.io/starlingx/stx-distributed-cloud:master-debian-stable-latest
    db_drop: docker.io/starlingx/stx-distributed-cloud:master-debian-stable-latest
    rabbit_init: docker.io/rabbitmq:3.7-management
    dep_check: quay.io/stackanetes/kubernetes-entrypoint:v0.3.1
  pullPolicy: IfNotPresent
  local_registry:
    active: false

labels:
  dcorch:
    node_selector_key: starlingx.io/distributed-cloud
    node_selector_value: enabled
  job:
    node_selector_key: starlingx.io/distributed-cloud
    node_selector_value: enabled

imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
